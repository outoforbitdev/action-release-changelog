name: Test
permissions: read-all
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths:
      - src/*
      - Dockerfile
      - action.yml
jobs:
  test-python-script:
    runs-on: ubuntu-latest
    name: Test Python Script
    outputs:
      last-version: ${{ steps.run-script.outputs.last-version }}
      version-long: ${{ steps.run-script.outputs.version-long}}
      new-release: ${{ steps.run-script.outputs.last-version != steps.run-script.outputs.version-long }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5 
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: python -m pip install PyGithub
      - name: Run script
        id: run-script
        run: python src/create_release.py ${{ secrets.GITHUB_TOKEN }} src/test/CHANGELOG.md true true true outoforbitdev/action-release-changelog
      - name: Check outputs
        run: python src/test/check_outputs.py ${{ steps.run-script.outputs.version-short }} ${{ steps.run-script.outputs.version-long }}
  test-docker-image:
    runs-on: ubuntu-latest
    name: Test Image
    needs: test-python-script
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test image
        id: test-image
        run: |
          docker build -t image .
          docker run --entrypoint "sh" image /src/tests.sh
      
  publish-docker-image:
    runs-on: ubuntu-latest
    name: Publish Image
    needs: 
      - test-python-script
      - test-docker-image
    if: ${{ needs.test-python-script.outputs.new-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Publish Image
        uses: outoforbitdev/action-docker-publish@v3.0.0
        id: docker-publish
        if: github.base_ref == 'staging' || github.base_ref == 'main'
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          image-name: ${{ vars.IMAGE_NAME }}
          image-tag: "build"
          platforms: "linux/amd64,linux/arm64"
  test-action:
    runs-on: ubuntu-latest
    name: Test Action
    needs: test-docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Create Release
        uses: ./
        id: create-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          dry-run: true
