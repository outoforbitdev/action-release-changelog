name: Test
permissions: read-all
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test-python-script:
    runs-on: ubuntu-latest
    name: Test Python Script
    outputs:
      version_short: ${{ steps.run-script.outputs.version_short }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5 
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: python -m pip install requests
      - name: Run script
        id: run-script
        run: python src/create_release.py ${{ secrets.GITHUB_TOKEN }} src/test/CHANGELOG.md true true true outoforbitdev/action-release-changelog
      - name: Check variables
        run: echo "${{ steps.run-script.outputs.version_short }}"
  check-python-script-output:
    runs-on: ubuntu-latest
    name: Check Python Script Output
    needs: test-python-script
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Print output
        run: echo "${{ needs.test-python-script.outputs.version_short }}"
  # publish-docker-image:
  #   runs-on: ubuntu-latest
  #   name: Publish Image
  #   needs: test-python-script
  #   if: ${{ !contains(github.event.pull_request.labels.*.name, format('type{0} chore', ':')) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Publish Image
  #       uses: outoforbitdev/action-docker-publish@v3.0.0
  #       id: docker-publish
  #       if: github.base_ref == 'staging' || github.base_ref == 'main'
  #       with:
  #         docker-username: ${{ secrets.DOCKER_USERNAME }}
  #         docker-token: ${{ secrets.DOCKER_TOKEN }}
  #         image-name: ${{ vars.IMAGE_NAME }}
  #         image-tag: "build"
  #     - name: Output Tags
  #       run: echo "Tag is ${{steps.docker-publish.output.sha-tag}}"
